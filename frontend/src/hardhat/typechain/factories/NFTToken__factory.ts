/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { NFTToken } from "../NFTToken";

export class NFTToken__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): Promise<NFTToken> {
    return super.deploy(name_, symbol_, overrides || {}) as Promise<NFTToken>;
  }
  getDeployTransaction(
    name_: string,
    symbol_: string,
    overrides?: Overrides
  ): TransactionRequest {
    return super.getDeployTransaction(name_, symbol_, overrides || {});
  }
  attach(address: string): NFTToken {
    return super.attach(address) as NFTToken;
  }
  connect(signer: Signer): NFTToken__factory {
    return super.connect(signer) as NFTToken__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTToken {
    return new Contract(address, _abi, signerOrProvider) as NFTToken;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "string",
        name: "name_",
        type: "string",
      },
      {
        internalType: "string",
        name: "symbol_",
        type: "string",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "approved",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Approval",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "ApprovalForAll",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "Transfer",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "approve",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "balanceOf",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "getApproved",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
    ],
    name: "isApprovedForAll",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "ownerOf",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
      {
        internalType: "bytes",
        name: "_data",
        type: "bytes",
      },
    ],
    name: "safeTransferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "operator",
        type: "address",
      },
      {
        internalType: "bool",
        name: "approved",
        type: "bool",
      },
    ],
    name: "setApprovalForAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "symbol",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "tokenURI",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "from",
        type: "address",
      },
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenId",
        type: "uint256",
      },
    ],
    name: "transferFrom",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b506040516200149b3803806200149b8339810160408190526200003491620001c5565b81516200004990600090602085019062000068565b5080516200005f90600190602084019062000068565b50505062000282565b82805462000076906200022f565b90600052602060002090601f0160209004810192826200009a5760008555620000e5565b82601f10620000b557805160ff1916838001178555620000e5565b82800160010185558215620000e5579182015b82811115620000e5578251825591602001919060010190620000c8565b50620000f3929150620000f7565b5090565b5b80821115620000f35760008155600101620000f8565b600082601f8301126200012057600080fd5b81516001600160401b03808211156200013d576200013d6200026c565b604051601f8301601f19908116603f011681019082821181831017156200016857620001686200026c565b816040528381526020925086838588010111156200018557600080fd5b600091505b83821015620001a957858201830151818301840152908201906200018a565b83821115620001bb5760008385830101525b9695505050505050565b60008060408385031215620001d957600080fd5b82516001600160401b0380821115620001f157600080fd5b620001ff868387016200010e565b935060208501519150808211156200021657600080fd5b5062000225858286016200010e565b9150509250929050565b600181811c908216806200024457607f821691505b602082108114156200026657634e487b7160e01b600052602260045260246000fd5b50919050565b634e487b7160e01b600052604160045260246000fd5b61120980620002926000396000f3fe608060405234801561001057600080fd5b50600436106100af5760003560e01c806301ffc9a7146100b457806306fdde03146100dc578063081812fc146100f1578063095ea7b31461011c57806323b872dd1461013157806342842e0e146101445780636352211e1461015757806370a082311461016a57806395d89b411461018b578063a22cb46514610193578063b88d4fde146101a6578063c87b56dd146101b9578063e985e9c5146101cc575b600080fd5b6100c76100c2366004610ee7565b6101df565b60405190151581526020015b60405180910390f35b6100e4610231565b6040516100d39190610fd2565b6101046100ff366004610f21565b6102c3565b6040516001600160a01b0390911681526020016100d3565b61012f61012a366004610ebd565b610352565b005b61012f61013f366004610d69565b610467565b61012f610152366004610d69565b610498565b610104610165366004610f21565b6104b3565b61017d610178366004610d1b565b61052c565b6040519081526020016100d3565b6100e46105b5565b61012f6101a1366004610e81565b6105c4565b61012f6101b4366004610da5565b610687565b6100e46101c7366004610f21565b6106bf565b6100c76101da366004610d36565b610797565b60006001600160e01b031982166380ac58cd60e01b148061021057506001600160e01b03198216635b5e139f60e01b145b8061022b57506301ffc9a760e01b6001600160e01b03198316145b92915050565b606060008054610240906110f8565b80601f016020809104026020016040519081016040528092919081815260200182805461026c906110f8565b80156102b95780601f1061028e576101008083540402835291602001916102b9565b820191906000526020600020905b81548152906001019060200180831161029c57829003601f168201915b5050505050905090565b60006102ce826107c5565b6103365760405162461bcd60e51b815260206004820152602e60248201527f4e4654546f6b656e3a20617070726f76656420717565727920666f72206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b60648201526084015b60405180910390fd5b506000908152600460205260409020546001600160a01b031690565b600061035d826104b3565b9050806001600160a01b0316836001600160a01b031614156103cd5760405162461bcd60e51b815260206004820152602360248201527f4e4654546f6b656e3a20617070726f76616c20746f2063757272656e74206f776044820152623732b960e91b606482015260840161032d565b336001600160a01b03821614806103e957506103e98133610797565b6104585760405162461bcd60e51b815260206004820152603a60248201527f4e4654546f6b656e3a20617070726f76652063616c6c6572206973206e6f74206044820152791bdddb995c881b9bdc88185c1c1c9bdd995908199bdc88185b1b60321b606482015260840161032d565b61046283836107e2565b505050565b6104713382610850565b61048d5760405162461bcd60e51b815260040161032d90610fe5565b61046283838361091c565b61046283838360405180602001604052806000815250610687565b6000818152600260205260408120546001600160a01b03168061022b5760405162461bcd60e51b815260206004820152602b60248201527f4e4654546f6b656e3a206f776e657220717565727920666f72206e6f6e65786960448201526a39ba32b73a103a37b5b2b760a91b606482015260840161032d565b60006001600160a01b0382166105995760405162461bcd60e51b815260206004820152602c60248201527f4e4654546f6b656e3a2062616c616e636520717565727920666f72207468652060448201526b7a65726f206164647265737360a01b606482015260840161032d565b506001600160a01b031660009081526003602052604090205490565b606060018054610240906110f8565b6001600160a01b03821633141561061b5760405162461bcd60e51b815260206004820152601b60248201527a27232a2a37b5b2b71d1030b8383937bb32903a379031b0b63632b960291b604482015260640161032d565b3360008181526005602090815260408083206001600160a01b03871680855290835292819020805460ff191686151590811790915590519081529192917f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a35050565b6106913383610850565b6106ad5760405162461bcd60e51b815260040161032d90610fe5565b6106b984848484610ac1565b50505050565b60606106ca826107c5565b61072e5760405162461bcd60e51b815260206004820152602f60248201527f4552433732314d657461646174613a2055524920717565727920666f72206e6f60448201526e3732bc34b9ba32b73a103a37b5b2b760891b606482015260840161032d565b600061074560408051602081019091526000815290565b905060008151116107655760405180602001604052806000815250610790565b8061076f84610af4565b604051602001610780929190610f66565b6040516020818303038152906040525b9392505050565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000908152600260205260409020546001600160a01b0316151590565b600081815260046020526040902080546001600160a01b0319166001600160a01b0384169081179091558190610817826104b3565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b600061085b826107c5565b6108be5760405162461bcd60e51b815260206004820152602e60248201527f4e4654546f6b656e3a206f70657261746f7220717565727920666f72206e6f6e60448201526d32bc34b9ba32b73a103a37b5b2b760911b606482015260840161032d565b60006108c9836104b3565b9050806001600160a01b0316846001600160a01b031614806109045750836001600160a01b03166108f9846102c3565b6001600160a01b0316145b8061091457506109148185610797565b949350505050565b826001600160a01b031661092f826104b3565b6001600160a01b0316146109995760405162461bcd60e51b815260206004820152602b60248201527f4e4654546f6b656e3a207472616e73666572206f6620746f6b656e207468617460448201526a1034b9903737ba1037bbb760a91b606482015260840161032d565b6001600160a01b0382166109fe5760405162461bcd60e51b815260206004820152602660248201527f4e4654546f6b656e3a207472616e7366657220746f20746865207a65726f206160448201526564647265737360d01b606482015260840161032d565b610a096000826107e2565b6001600160a01b0383166000908152600360205260408120805460019290610a329084906110b5565b90915550506001600160a01b0382166000908152600360205260408120805460019290610a60908490611089565b909155505060008181526002602052604080822080546001600160a01b0319166001600160a01b0386811691821790925591518493918716917fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b610acc84848461091c565b610ad884848484610bf2565b6106b95760405162461bcd60e51b815260040161032d90611038565b606081610b185750506040805180820190915260018152600360fc1b602082015290565b8160005b8115610b425780610b2c81611133565b9150610b3b9050600a836110a1565b9150610b1c565b60008167ffffffffffffffff811115610b5d57610b5d6111a4565b6040519080825280601f01601f191660200182016040528015610b87576020820181803683370190505b5090505b841561091457610b9c6001836110b5565b9150610ba9600a8661114e565b610bb4906030611089565b60f81b818381518110610bc957610bc961118e565b60200101906001600160f81b031916908160001a905350610beb600a866110a1565b9450610b8b565b60006001600160a01b0384163b15610cf457604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290610c36903390899088908890600401610f95565b602060405180830381600087803b158015610c5057600080fd5b505af1925050508015610c80575060408051601f3d908101601f19168201909252610c7d91810190610f04565b60015b610cda573d808015610cae576040519150601f19603f3d011682016040523d82523d6000602084013e610cb3565b606091505b508051610cd25760405162461bcd60e51b815260040161032d90611038565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050610914565b506001949350505050565b80356001600160a01b0381168114610d1657600080fd5b919050565b600060208284031215610d2d57600080fd5b61079082610cff565b60008060408385031215610d4957600080fd5b610d5283610cff565b9150610d6060208401610cff565b90509250929050565b600080600060608486031215610d7e57600080fd5b610d8784610cff565b9250610d9560208501610cff565b9150604084013590509250925092565b60008060008060808587031215610dbb57600080fd5b610dc485610cff565b9350610dd260208601610cff565b925060408501359150606085013567ffffffffffffffff80821115610df657600080fd5b818701915087601f830112610e0a57600080fd5b813581811115610e1c57610e1c6111a4565b604051601f8201601f19908116603f01168101908382118183101715610e4457610e446111a4565b816040528281528a6020848701011115610e5d57600080fd5b82602086016020830137600060208483010152809550505050505092959194509250565b60008060408385031215610e9457600080fd5b610e9d83610cff565b915060208301358015158114610eb257600080fd5b809150509250929050565b60008060408385031215610ed057600080fd5b610ed983610cff565b946020939093013593505050565b600060208284031215610ef957600080fd5b8135610790816111ba565b600060208284031215610f1657600080fd5b8151610790816111ba565b600060208284031215610f3357600080fd5b5035919050565b60008151808452610f528160208601602086016110cc565b601f01601f19169290920160200192915050565b60008351610f788184602088016110cc565b835190830190610f8c8183602088016110cc565b01949350505050565b6001600160a01b0385811682528416602082015260408101839052608060608201819052600090610fc890830184610f3a565b9695505050505050565b6020815260006107906020830184610f3a565b60208082526033908201527f4e4654546f6b656e3a207472616e736665722063616c6c6572206973206e6f74604082015272081bdddb995c881b9bdc88185c1c1c9bdd9959606a1b606082015260800190565b60208082526031908201527f4e4654546f6b656e3a207472616e7366657220746f206e6f6e204e465452656360408201527032b4bb32b91034b6b83632b6b2b73a32b960791b606082015260800190565b6000821982111561109c5761109c611162565b500190565b6000826110b0576110b0611178565b500490565b6000828210156110c7576110c7611162565b500390565b60005b838110156110e75781810151838201526020016110cf565b838111156106b95750506000910152565b600181811c9082168061110c57607f821691505b6020821081141561112d57634e487b7160e01b600052602260045260246000fd5b50919050565b600060001982141561114757611147611162565b5060010190565b60008261115d5761115d611178565b500690565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052601260045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fd5b6001600160e01b0319811681146111d057600080fd5b5056fea2646970667358221220ddcc29d3f2f0afa901a6c7a49e990f232c5dbce053a59faa48bdedb5c999467764736f6c63430008060033";
