/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { NFTMarketplaceStorage } from "../NFTMarketplaceStorage";

export class NFTMarketplaceStorage__factory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<NFTMarketplaceStorage> {
    return super.deploy(overrides || {}) as Promise<NFTMarketplaceStorage>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): NFTMarketplaceStorage {
    return super.attach(address) as NFTMarketplaceStorage;
  }
  connect(signer: Signer): NFTMarketplaceStorage__factory {
    return super.connect(signer) as NFTMarketplaceStorage__factory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): NFTMarketplaceStorage {
    return new Contract(
      address,
      _abi,
      signerOrProvider
    ) as NFTMarketplaceStorage;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "address",
        name: "_bidder",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_seller",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
    ],
    name: "BidAccepted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_bidder",
        type: "address",
      },
    ],
    name: "BidCancelled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "bytes32",
        name: "_id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_tokenAddress",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "_tokenId",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_bidder",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_price",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_expiresAt",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_fingerprint",
        type: "bytes",
      },
    ],
    name: "BidCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ERC721Composable_ValidateFingerprint",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC721_Interface",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ERC721_Received",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MAX_BID_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "MIN_BID_DURATION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "ONE_MILLION",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "bidCounterByToken",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "bidIdByTokenAndBidder",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "bidIndexByBidId",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "paymentToken",
    outputs: [
      {
        internalType: "contract ERC20Interface",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b5061027e806100206000396000f3fe608060405234801561001057600080fd5b506004361061008e5760003560e01c806312712f7c14610093578063279dc1e4146100bf57806328bd196a146100fe5780632b4c32be146101295780633013ce29146101375780634c81a727146101625780639869b73614610170578063a750066e1461017a578063b5eea64414610184578063f88a1217146101a4575b600080fd5b6100a1638f9f4b6360e01b81565b6040516001600160e01b031990911681526020015b60405180910390f35b6100f06100cd3660046101f3565b600460209081526000938452604080852082529284528284209052825290205481565b6040519081526020016100b6565b6100f061010c3660046101c9565b600260209081526000928352604080842090915290825290205481565b6100a16380ac58cd60e01b81565b60005461014a906001600160a01b031681565b6040516001600160a01b0390911681526020016100b6565b6100a1630a85bd0160e11b81565b6100f0620f424081565b6100f062eff10081565b6100f061019236600461022f565b60036020526000908152604090205481565b6100f061012c81565b80356001600160a01b03811681146101c457600080fd5b919050565b600080604083850312156101dc57600080fd5b6101e5836101ad565b946020939093013593505050565b60008060006060848603121561020857600080fd5b610211846101ad565b925060208401359150610226604085016101ad565b90509250925092565b60006020828403121561024157600080fd5b503591905056fea26469706673582212202cc61fb483bb534d4666697ad58d3461e0322b01b2de826ea6fe7962e4bc652464736f6c63430008060033";
